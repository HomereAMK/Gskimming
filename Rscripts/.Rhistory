'Scales feeding to scale-eater pupfish',
'Crosses & Egg Collection',
'Genome-Resolved Analysis',
'Manuscript Preparation',
'Conference Presentations'),
Start = as.Date(c('2025-01-01',
'2025-06-01',
'2025-07-01',
'2025-09-01',
'2025-12-01',
'2026-02-01',
'2026-04-15',
'2026-06-01',
'2026-09-01',
'2026-12-01')),
Duration = c(150, 30, 60, 90, 60, 60, 45, 90, 90, 90),
Category = c('NA', 'Reproductive', 'Reproductive', 'Reproductive', 'Reproductive',
'Reproductive',  'Reproductive', 'Reproductive', 'Gut', 'Dissemination', 'Dissemination')
)
library(ggplot2)
library(scales)
# Define tasks with start dates, durations, and categories
tasks <- data.frame(
Task = c('Pupfish Re-collection & Genotyping',
'Crosses and collect of reproductive microbiomes',
'Metagenomic Shotgun Sequencing',
'Assembly & genome-resolved metagenomics',
'Differential abundance Estimates',
'Scales feeding to scale-eater pupfish',
'Crosses & Egg Collection',
'Genome-Resolved Analysis',
'Manuscript Preparation',
'Conference Presentations'),
Start = as.Date(c('2025-01-01',
'2025-06-01',
'2025-07-01',
'2025-09-01',
'2025-12-01',
'2026-02-01',
'2026-04-15',
'2026-06-01',
'2026-09-01',
'2026-12-01')),
Duration = c(150, 30, 60, 90, 60, 60, 45, 90, 90, 90),
Category = c('Both', 'Reproductive', 'Reproductive', 'Reproductive', 'Reproductive',
'Reproductive', 'Reproductive', 'Gut', 'Dissemination', 'Dissemination')
)
# Calculate end dates
tasks$End <- tasks$Start + tasks$Duration
# Create a factor to order tasks on the plot
tasks$Task <- factor(tasks$Task, levels=rev(tasks$Task))
# Set colors for categories
colors <- c('Gut' = 'skyblue', 'Reproductive' = 'lightcoral', 'Both' ='purple', 'Dissemination'= 'orange' )
# Plotting
ggplot(tasks, aes(y = Task, x = Start, xend = End, yend = Task, colour = Category)) +
geom_segment(size = 10) +
scale_colour_manual(values = colors) +
theme_minimal() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.ticks.y = element_blank()) +
labs(x = NULL, y = NULL, colour = "Microbiomes") +
scale_x_date(expand = c(0, 0), labels = date_format("%b %Y"), breaks = '2 month') +
ggtitle("")
library(ggplot2)
library(scales)
# Define tasks with start dates, durations, and categories
tasks <- data.frame(
Task = c('Pupfish Re-collection & Genotyping',
'Crosses and collect of reproductive microbiomes',
'Assembly & genome-resolved metagenomics',
'Differential abundance Estimates',
'Scales feeding to scale-eater pupfish',
'Genome-Resolved Analysis',
'Manuscript Preparation',
'Conference Presentations'),
Start = as.Date(c('2025-01-01',
'2025-06-01',
'2025-09-01',
'2025-12-01',
'2026-02-01',
'2026-06-01',
'2026-09-01',
'2026-12-01')),
Duration = c(150, 120, 180, 60, 60, 90, 90, 90),
Category = c('Both', 'Reproductive', 'Reproductive', 'Reproductive',
'Gut', 'Gut', 'Dissemination', 'Dissemination')
)
# Calculate end dates
tasks$End <- tasks$Start + tasks$Duration
# Create a factor to order tasks on the plot
tasks$Task <- factor(tasks$Task, levels=rev(tasks$Task))
# Set colors for categories
colors <- c('Gut' = 'skyblue', 'Reproductive' = 'lightcoral', 'Both' ='purple', 'Dissemination'= 'orange' )
# Plotting
ggplot(tasks, aes(y = Task, x = Start, xend = End, yend = Task, colour = Category)) +
geom_segment(size = 10) +
scale_colour_manual(values = colors) +
theme_minimal() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.ticks.y = element_blank()) +
labs(x = NULL, y = NULL, colour = "Microbiomes") +
scale_x_date(expand = c(0, 0), labels = date_format("%b %Y"), breaks = '2 month') +
ggtitle("")
library(ggplot2)
library(scales)
# Define tasks with start dates, durations, and categories
library(ggplot2)
library(scales)
# Define tasks with start dates, durations, and categories
tasks <- data.frame(
Task = c('Pupfish Re-collection & Genotyping',
'Crosses and Collect Reproductive Microbiomes',
'Assembly & Genome-Resolved Metagenomics (1)',
'Differential Abundance Estimates',
'Scales Feeding to Scale-Eater Pupfish',
'Assembly & Genome-Resolved Metagenomics (2)',
'Manuscripts Preparation',
'Conferences Presentations'),
Start = as.Date(c('2025-01-01',
'2025-06-01',
'2025-09-01',
'2025-12-01',
'2026-02-01',
'2026-06-01',
'2026-09-01',
'2026-12-01')),
Duration = c(150, 120, 180, 60, 60, 90, 90, 90),
Category = c('Both', 'Reproductive', 'Reproductive', 'Reproductive',
'Gut', 'Gut', 'Dissemination', 'Dissemination')
)
# Calculate end dates
tasks$End <- tasks$Start + tasks$Duration
# Create a factor to order tasks on the plot
tasks$Task <- factor(tasks$Task, levels = rev(tasks$Task))
# Set colors for categories
colors <- c('Gut' = 'skyblue', 'Reproductive' = 'lightcoral', 'Both' ='purple', 'Dissemination'= 'orange')
# Plotting
ggplot(tasks, aes(y = Task, x = Start, xend = End, yend = Task, colour = Category)) +
geom_segment(size = 12) +
scale_colour_manual(values = colors) +
theme_minimal() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position = "right",
plot.title = element_text(hjust = 0.5)) +
labs(x = NULL, y = NULL, colour = "Category") +
scale_x_date(expand = c(0, 0), labels = date_format("%b %Y"), breaks = '1 month') +
ggtitle("Pupfish Dual-Microbiome analysis  (2025-2027)")
# install.packages("remotes")
remotes::install_github("giocomai/ganttrify")
library(ganttrify)
library(dplyr)
# Define tasks with start dates, durations, and categories
tasks <- data.frame(
phase = c('Pupfish Re-collection & Genotyping',
'Crosses and Collect Reproductive Microbiomes',
'Assembly & Genome-Resolved Metagenomics (1)',
'Differential Abundance Estimates',
'Scales Feeding to Scale-Eater Pupfish',
'Assembly & Genome-Resolved Metagenomics (2)',
'Manuscripts Preparation',
'Conferences Presentations'),
start_date = as.Date(c('2025-01-01',
'2025-06-01',
'2025-09-01',
'2025-12-01',
'2026-02-01',
'2026-06-01',
'2026-09-01',
'2026-12-01')),
end_date = as.Date(c('2025-05-30',
'2025-10-28',
'2026-02-26',
'2026-01-30',
'2026-04-01',
'2026-09-28',
'2026-12-28',
'2027-03-28')),
category = c('Both', 'Reproductive', 'Reproductive', 'Reproductive',
'Gut', 'Gut', 'Dissemination', 'Dissemination')
) %>%
mutate(activity = phase,  # Copy phase to activity for ganttrify compatibility
label = phase)     # Label is the text that will appear in the chart
library(ganttrify)
library(dplyr)
# Define tasks with start dates, durations, and categories
tasks <- data.frame(
phase = c('Pupfish Re-collection & Genotyping',
'Crosses and Collect Reproductive Microbiomes',
'Assembly & Genome-Resolved Metagenomics (1)',
'Differential Abundance Estimates',
'Scales Feeding to Scale-Eater Pupfish',
'Assembly & Genome-Resolved Metagenomics (2)',
'Manuscripts Preparation',
'Conferences Presentations'),
start_date = as.Date(c('2025-01-01',
'2025-06-01',
'2025-09-01',
'2025-12-01',
'2026-02-01',
'2026-06-01',
'2026-09-01',
'2026-12-01')),
end_date = as.Date(c('2025-05-30',
'2025-10-28',
'2026-02-26',
'2026-01-30',
'2026-04-01',
'2026-09-28',
'2026-12-28',
'2027-03-28')),
category = c('Both', 'Reproductive', 'Reproductive', 'Reproductive',
'Gut', 'Gut', 'Dissemination', 'Dissemination')
) %>%
mutate(activity = phase,  # Copy phase to activity for ganttrify compatibility
label = phase)     # Label is the text that will appear in the chart
# Define tasks with start dates, durations, and categories
tasks <- data.frame(
phase = c('Pupfish Re-collection & Genotyping',
'Crosses and Collect Reproductive Microbiomes',
'Assembly & Genome-Resolved Metagenomics (1)',
'Differential Abundance Estimates',
'Scales Feeding to Scale-Eater Pupfish',
'Assembly & Genome-Resolved Metagenomics (2)',
'Manuscripts Preparation',
'Conferences Presentations'),
start_date = as.Date(c('2025-01-01',
'2025-06-01',
'2025-09-01',
'2025-12-01',
'2026-02-01',
'2026-06-01',
'2026-09-01',
'2026-12-01')),
end_date = as.Date(c('2025-05-30',
'2025-10-28',
'2026-02-26',
'2026-01-30',
'2026-04-01',
'2026-09-28',
'2026-12-28',
'2027-03-28')),
category = c('Both', 'Reproductive', 'Reproductive', 'Reproductive',
'Gut', 'Gut', 'Dissemination', 'Dissemination')
) %>%
mutate(activity = phase,  # Copy phase to activity for ganttrify compatibility
label = phase)     # Label is the text that will appear in the chart
### The BEGINNING ~~~~~
##
# ~ Plot a PCoa/MDS with jc distance matrix from skmer -distance | from Homère J. Alves Monteiro and Eduardo Charvel
# ~ also Plot a PCoa/MDS with .ibs matrix from angsd -doIBS | from Homère J. Alves Monteiro and Eduardo Charvel
# R 4.3.2 GUI 1.80 Big Sur ARM build (8281)
### Clearing environment and setting working directory
rm(list = ls(all = TRUE))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
### Loading necessary packages
library(tidyverse)
library(dplyr)
library(ape)
library(cowplot)
library(knitr)
library(scales)
library(miscTools)
if (!requireNamespace("dbscan", quietly = TRUE)) install.packages("dbscan")
if (!requireNamespace("mclust", quietly = TRUE)) install.packages("mclust")
library(dbscan)
library(mclust)
### Sourcing required functions
source("individual_mdsGskim_functions_hjam.R")
### Reading and processing distance matrix
dist_jc <- read_tsv("../../Skmer-2/data/Clupea_4x_24feb24/jc-24.02-dist-mat_4x_Clupea.txt", col_names = FALSE) %>%
dplyr::select(1:nrow(.)) %>%
as.matrix()
pairwise_distances <- dist_jc[-1, -1]
ibs_mat <- as.data.frame(as.matrix(pairwise_distances))
ibs_mat[is.na(ibs_mat) | ibs_mat == "nan"] <- 0
ibs_mat[is.na(ibs_mat) | ibs_mat == "-nan"] <- 0
str(ibs_mat)
### Creating annotation file
sample_ids <- dist_jc[-1, 1]
cleaned_ids <- gsub("unclassified-kra_", "", sample_ids)
cleaned_ids <- gsub("_", "", cleaned_ids)
species_names <- rep("Clupea", length(sample_ids))
### If you already have an tailored annotation file
#annot_ed <- read_tsv(file = "../../Skmer-2/with_fam_nas/geno_fam_annotation.tsv" )
annotation_df <- data.frame(sample_id = sample_ids, cleaned_id = cleaned_ids, species = species_names)
#write.csv(annotation_df, "../../Skmer-2/data/ClupeaAtmore3feb/03.02-dist-mat_annot.csv", row.names = FALSE)
### Link the master list to retrieve supplementary info
master_list<- read_csv("~/Desktop/GitHub/Gskimming/Metadata/ClupeaAtmore/Master_list_ClupeaAtmore.csv")
annot_df_final <- merge(annotation_df, master_list, by.x = "cleaned_id", by.y = "run_accession", all.x = TRUE)
missing_ind <- master_list %>%
filter(!run_accession %in% annot_df_final$cleaned_id)
for (accession in missing_ind$run_accession) {
cat(accession, "\n")
}
# Renaming the columns
annot_modern<- merge(annotation_df, annot_df_final, by = "cleaned_id")
#write.csv(annot_modern, "../../Gskimming/01_infofiles/ClupeaAtmore/ClupeaModern_annot.csv", row.names = FALSE)
fst_annot <- annot_modern %>% dplyr::select(sample_id.x, population)
colnames(fst_annot) <- c("genome", "family")
fst_annot$genome
### Performing PCoA with initial annotation
mds_plot <- PCoA(ibs_mat, annot_df_final$cleaned_id, annot_df_final$population,4, 1, 2, show.ellipse = FALSE, show.label = TRUE)
### Performing PCoA with initial annotation
mds_plot <- PCoA(ibs_mat, annot_df_final$cleaned_id, annot_df_final$population,50, 1, 2, show.ellipse = FALSE, show.label = TRUE)
### Performing PCoA with initial annotation
mds_plot <- PCoA(ibs_mat, annot_df_final$cleaned_id, annot_df_final$population,40, 1, 2, show.ellipse = FALSE, show.label = TRUE)
View(missing_ind)
View(pcoa_table)
### Performing PCoA with initial annotation
mds_plot <- PCoA(ibs_mat, annot_df_final$cleaned_id, annot_df_final$population,45, 1, 2, show.ellipse = FALSE, show.label = TRUE)
### Performing PCoA with initial annotation
mds_plot <- PCoA(ibs_mat, annot_df_final$cleaned_id, annot_df_final$population,40, 1, 2, show.ellipse = FALSE, show.label = TRUE)
mds_plot
pcoa_table_genome_wide <- pcoa_table
#write.csv(pcoa_table, "~/Desktop/GitHub/Gskimming/01_infofiles/DBScan/4x_jc-24.02-pcoa_table-mat_4x_Clupea.csv", row.names = FALSE)
write.csv(pcoa_table, "~/Desktop/GitHub/Gskimming/01_infofiles/pcoa_table-mat_40pc_4x_jc-24.02.24_Clupea.csv", row.names = FALSE)
library(ggplot2)
library(dplyr)
rm(list = ls(all = TRUE))
# Define tasks with start dates, durations, and categories
tasks <- data.frame(
phase = c('Pupfish re-collection & genotyping',
'Scales feeding to specialist pupfish species experiment',
'Assembly & genome-resolved metagenomics',
'Microbial communities differential abundance',
'Pupfish husbandry for CRISPR/Cas gene editing',
'CRISPR/Cas gene editing of target genes and Differential gene expression analysis',
'Manuscripts preparation',
'Conferences presentations'),
start_date = as.Date(c('2025-01-01',
'2025-06-01',
'2025-08-01',
'2025-11-01',
'2025-08-01',
'2026-01-01',
'2025-12-01',
'2026-07-01')),
end_date = as.Date(c('2025-05-30',
'2025-09-28',
'2026-02-26',
'2026-03-30',
'2026-04-01',
'2026-09-28',
'2026-12-28',
'2026-12-28')),
category = c('Pupfishes sampling ', 'Microbiome ', 'Microbiome ', 'Microbiome ',
'CRISPR/Cas ', 'CRISPR/Cas ', 'Dissemination  ', 'Dissemination  ')
) %>%
mutate(activity = phase,  # Copy phase to activity
label = phase)     # Label is the text that will appear in the chart
# Reverse the order of phases to ensure chronological order from top to bottom
tasks$phase <- factor(tasks$phase, levels = rev(unique(tasks$phase)))
# Custom colors for categories
colors <- c('Pupfishes sampling ' = 'purple', 'Microbiome ' = 'lightcoral', 'CRISPR/Cas ' = 'skyblue', 'Dissemination  ' = 'orange')
# Plotting
gant <- ggplot(tasks, aes(x = start_date, xend = end_date, y = phase, yend = phase, color = category)) +
geom_segment(size = 8, lineend = "round") +
scale_color_manual(values = colors) +
theme_minimal() +  # Set the base fill color for the theme
theme(panel.grid.major = element_line(color = "gray90"),  # Lighter lines for major grid
panel.grid.minor = element_line(color = "gray95", linetype = "dotted"),
panel.background = element_rect(fill = "#fff7f3"),
panel.border = element_rect(colour = "black", size = .5, fill = NA),
plot.margin = margin(t = .005, b = .005, r = .2, l = .2, unit = "cm"),
legend.background = element_rect(fill = "#fff7f3", size = 0.15, color = "#5e5e5e", linetype = "dotted"),
legend.key = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_text(size = 13, hjust = 1, color = "grey20", face = "bold"),
axis.text.x = element_text(size = 10,angle = 45, hjust = 1),
axis.ticks.y = element_blank(),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 16))+
labs(color = "") +
ggtitle("Pupfish Microbiomes and speciation (Jan 2025- Dec 2027)") +
scale_x_date(date_labels = "%b %Y", date_breaks = "4 month",
limits = as.Date(c('2025-01-01', '2026-12-31')),
breaks = as.Date(seq(from = as.Date('2025-01-01'), to = as.Date('2026-12-01'), by = "month")))
gant
library(ggplot2)
library(dplyr)
rm(list = ls(all = TRUE))
# Define tasks with start dates, durations, and categories
tasks <- data.frame(
phase = c('Pupfish re-collection & genotyping',
'Scales feeding to specialist pupfish species experiment',
'Assembly & genome-resolved metagenomics',
'Microbial communities differential abundance',
'Pupfish husbandry for CRISPR/Cas gene editing',
'CRISPR/Cas gene editing of target genes and \n Differential gene expression analysis',
'Manuscripts preparation',
'Conferences presentations'),
start_date = as.Date(c('2025-01-01',
'2025-06-01',
'2025-08-01',
'2025-11-01',
'2025-08-01',
'2026-01-01',
'2025-12-01',
'2026-07-01')),
end_date = as.Date(c('2025-05-30',
'2025-09-28',
'2026-02-26',
'2026-03-30',
'2026-04-01',
'2026-09-28',
'2026-12-28',
'2026-12-28')),
category = c('Pupfishes sampling ', 'Microbiome ', 'Microbiome ', 'Microbiome ',
'CRISPR/Cas ', 'CRISPR/Cas ', 'Dissemination  ', 'Dissemination  ')
) %>%
mutate(activity = phase,  # Copy phase to activity
label = phase)     # Label is the text that will appear in the chart
# Reverse the order of phases to ensure chronological order from top to bottom
tasks$phase <- factor(tasks$phase, levels = rev(unique(tasks$phase)))
# Custom colors for categories
colors <- c('Pupfishes sampling ' = 'purple', 'Microbiome ' = 'lightcoral', 'CRISPR/Cas ' = 'skyblue', 'Dissemination  ' = 'orange')
# Plotting
gant <- ggplot(tasks, aes(x = start_date, xend = end_date, y = phase, yend = phase, color = category)) +
geom_segment(size = 8, lineend = "round") +
scale_color_manual(values = colors) +
theme_minimal() +  # Set the base fill color for the theme
theme(panel.grid.major = element_line(color = "gray90"),  # Lighter lines for major grid
panel.grid.minor = element_line(color = "gray95", linetype = "dotted"),
panel.background = element_rect(fill = "#fff7f3"),
panel.border = element_rect(colour = "black", size = .5, fill = NA),
plot.margin = margin(t = .005, b = .005, r = .2, l = .2, unit = "cm"),
legend.background = element_rect(fill = "#fff7f3", size = 0.15, color = "#5e5e5e", linetype = "dotted"),
legend.key = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_text(size = 13, hjust = 1, color = "grey20", face = "bold"),
axis.text.x = element_text(size = 10,angle = 45, hjust = 1),
axis.ticks.y = element_blank(),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 16))+
labs(color = "") +
ggtitle("Pupfish Microbiomes and speciation (Jan 2025- Dec 2027)") +
scale_x_date(date_labels = "%b %Y", date_breaks = "4 month",
limits = as.Date(c('2025-01-01', '2026-12-31')),
breaks = as.Date(seq(from = as.Date('2025-01-01'), to = as.Date('2026-12-01'), by = "month")))
gant
ggsave(gant, file = "Documents/Carlsberg/gant_10_03_24.png",
scale = 1, width = 12, height = 12, dpi = 600)
library(ggplot2)
library(dplyr)
rm(list = ls(all = TRUE))
# Define tasks with start dates, durations, and categories
tasks <- data.frame(
phase = c('Pupfish re-collection & genotyping',
'Scales feeding experiment',
'Assembly & genome-resolved metagenomics',
'Microbial communities differential abundance',
'Pupfish husbandry for CRISPR/Cas gene editing',
'CRISPR/Cas gene editing of target genes \n Differential gene expression analysis',
'Manuscripts preparation',
'Conferences presentations'),
start_date = as.Date(c('2025-01-01',
'2025-06-01',
'2025-08-01',
'2025-11-01',
'2025-08-01',
'2026-01-01',
'2025-12-01',
'2026-07-01')),
end_date = as.Date(c('2025-05-30',
'2025-09-28',
'2026-02-26',
'2026-03-30',
'2026-04-01',
'2026-09-28',
'2026-12-28',
'2026-12-28')),
category = c('Pupfishes sampling ', 'Microbiome ', 'Microbiome ', 'Microbiome ',
'CRISPR/Cas ', 'CRISPR/Cas ', 'Dissemination  ', 'Dissemination  ')
) %>%
mutate(activity = phase,  # Copy phase to activity
label = phase)     # Label is the text that will appear in the chart
# Reverse the order of phases to ensure chronological order from top to bottom
tasks$phase <- factor(tasks$phase, levels = rev(unique(tasks$phase)))
# Custom colors for categories
colors <- c('Pupfishes sampling ' = 'purple', 'Microbiome ' = 'lightcoral', 'CRISPR/Cas ' = 'skyblue', 'Dissemination  ' = 'orange')
# Plotting
gant <- ggplot(tasks, aes(x = start_date, xend = end_date, y = phase, yend = phase, color = category)) +
geom_segment(size = 8, lineend = "round") +
scale_color_manual(values = colors) +
theme_minimal() +  # Set the base fill color for the theme
theme(panel.grid.major = element_line(color = "gray90"),  # Lighter lines for major grid
panel.grid.minor = element_line(color = "gray95", linetype = "dotted"),
panel.background = element_rect(fill = "#fff7f3"),
panel.border = element_rect(colour = "black", size = .5, fill = NA),
plot.margin = margin(t = .005, b = .005, r = .2, l = .2, unit = "cm"),
legend.background = element_rect(fill = "#fff7f3", size = 0.15, color = "#5e5e5e", linetype = "dotted"),
legend.key = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_text(size = 13, hjust = 1, color = "grey20", face = "bold"),
axis.text.x = element_text(size = 10,angle = 45, hjust = 1),
axis.ticks.y = element_blank(),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 16))+
labs(color = "") +
ggtitle("Pupfish Microbiomes and speciation (Jan 2025- Dec 2027)") +
scale_x_date(date_labels = "%b %Y", date_breaks = "4 month",
limits = as.Date(c('2025-01-01', '2026-12-31')),
breaks = as.Date(seq(from = as.Date('2025-01-01'), to = as.Date('2026-12-01'), by = "month")))
gant
ggsave(gant, file = "~/Documents/Carlsberg/gant_10_03_24.png",
scale = 1, width = 12, height = 12, dpi = 600)
