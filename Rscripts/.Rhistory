ggplot(tasks, aes(y = Task, x = Start, xend = End, yend = Task, colour = Category)) +
geom_segment(size = 10) +
scale_colour_manual(values = colors) +
theme_minimal() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.ticks.y = element_blank()) +
labs(x = NULL, y = NULL, colour = "Microbiomes") +
scale_x_date(expand = c(0, 0), labels = date_format("%b %Y"), breaks = '2 month') +
ggtitle("")
library(ggplot2)
library(scales)
# Define tasks with start dates, durations, and categories
library(ggplot2)
library(scales)
# Define tasks with start dates, durations, and categories
tasks <- data.frame(
Task = c('Pupfish Re-collection & Genotyping',
'Crosses and Collect Reproductive Microbiomes',
'Assembly & Genome-Resolved Metagenomics (1)',
'Differential Abundance Estimates',
'Scales Feeding to Scale-Eater Pupfish',
'Assembly & Genome-Resolved Metagenomics (2)',
'Manuscripts Preparation',
'Conferences Presentations'),
Start = as.Date(c('2025-01-01',
'2025-06-01',
'2025-09-01',
'2025-12-01',
'2026-02-01',
'2026-06-01',
'2026-09-01',
'2026-12-01')),
Duration = c(150, 120, 180, 60, 60, 90, 90, 90),
Category = c('Both', 'Reproductive', 'Reproductive', 'Reproductive',
'Gut', 'Gut', 'Dissemination', 'Dissemination')
)
# Calculate end dates
tasks$End <- tasks$Start + tasks$Duration
# Create a factor to order tasks on the plot
tasks$Task <- factor(tasks$Task, levels = rev(tasks$Task))
# Set colors for categories
colors <- c('Gut' = 'skyblue', 'Reproductive' = 'lightcoral', 'Both' ='purple', 'Dissemination'= 'orange')
# Plotting
ggplot(tasks, aes(y = Task, x = Start, xend = End, yend = Task, colour = Category)) +
geom_segment(size = 12) +
scale_colour_manual(values = colors) +
theme_minimal() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position = "right",
plot.title = element_text(hjust = 0.5)) +
labs(x = NULL, y = NULL, colour = "Category") +
scale_x_date(expand = c(0, 0), labels = date_format("%b %Y"), breaks = '1 month') +
ggtitle("Pupfish Dual-Microbiome analysis  (2025-2027)")
# install.packages("remotes")
remotes::install_github("giocomai/ganttrify")
library(ganttrify)
library(dplyr)
# Define tasks with start dates, durations, and categories
tasks <- data.frame(
phase = c('Pupfish Re-collection & Genotyping',
'Crosses and Collect Reproductive Microbiomes',
'Assembly & Genome-Resolved Metagenomics (1)',
'Differential Abundance Estimates',
'Scales Feeding to Scale-Eater Pupfish',
'Assembly & Genome-Resolved Metagenomics (2)',
'Manuscripts Preparation',
'Conferences Presentations'),
start_date = as.Date(c('2025-01-01',
'2025-06-01',
'2025-09-01',
'2025-12-01',
'2026-02-01',
'2026-06-01',
'2026-09-01',
'2026-12-01')),
end_date = as.Date(c('2025-05-30',
'2025-10-28',
'2026-02-26',
'2026-01-30',
'2026-04-01',
'2026-09-28',
'2026-12-28',
'2027-03-28')),
category = c('Both', 'Reproductive', 'Reproductive', 'Reproductive',
'Gut', 'Gut', 'Dissemination', 'Dissemination')
) %>%
mutate(activity = phase,  # Copy phase to activity for ganttrify compatibility
label = phase)     # Label is the text that will appear in the chart
library(ganttrify)
library(dplyr)
# Define tasks with start dates, durations, and categories
tasks <- data.frame(
phase = c('Pupfish Re-collection & Genotyping',
'Crosses and Collect Reproductive Microbiomes',
'Assembly & Genome-Resolved Metagenomics (1)',
'Differential Abundance Estimates',
'Scales Feeding to Scale-Eater Pupfish',
'Assembly & Genome-Resolved Metagenomics (2)',
'Manuscripts Preparation',
'Conferences Presentations'),
start_date = as.Date(c('2025-01-01',
'2025-06-01',
'2025-09-01',
'2025-12-01',
'2026-02-01',
'2026-06-01',
'2026-09-01',
'2026-12-01')),
end_date = as.Date(c('2025-05-30',
'2025-10-28',
'2026-02-26',
'2026-01-30',
'2026-04-01',
'2026-09-28',
'2026-12-28',
'2027-03-28')),
category = c('Both', 'Reproductive', 'Reproductive', 'Reproductive',
'Gut', 'Gut', 'Dissemination', 'Dissemination')
) %>%
mutate(activity = phase,  # Copy phase to activity for ganttrify compatibility
label = phase)     # Label is the text that will appear in the chart
# Define tasks with start dates, durations, and categories
tasks <- data.frame(
phase = c('Pupfish Re-collection & Genotyping',
'Crosses and Collect Reproductive Microbiomes',
'Assembly & Genome-Resolved Metagenomics (1)',
'Differential Abundance Estimates',
'Scales Feeding to Scale-Eater Pupfish',
'Assembly & Genome-Resolved Metagenomics (2)',
'Manuscripts Preparation',
'Conferences Presentations'),
start_date = as.Date(c('2025-01-01',
'2025-06-01',
'2025-09-01',
'2025-12-01',
'2026-02-01',
'2026-06-01',
'2026-09-01',
'2026-12-01')),
end_date = as.Date(c('2025-05-30',
'2025-10-28',
'2026-02-26',
'2026-01-30',
'2026-04-01',
'2026-09-28',
'2026-12-28',
'2027-03-28')),
category = c('Both', 'Reproductive', 'Reproductive', 'Reproductive',
'Gut', 'Gut', 'Dissemination', 'Dissemination')
) %>%
mutate(activity = phase,  # Copy phase to activity for ganttrify compatibility
label = phase)     # Label is the text that will appear in the chart
### The BEGINNING ~~~~
##
# ~ Plots FST heatmap from fst calculator module | By Eduardo Charvel  and  Homère J. Alves Monteiro
# Cleans the environment ~
rm(list=ls())
#install.package("pacman")
# Loads required packages ~
pacman::p_load(pheatmap, tidyverse, reshape2)
# Loads Fst table ~
# Don't forget to remove the "sample" string in the .txt file
data <- read.table("/Users/sjr729/Desktop/GitHub/Gskimming/01_infofiles/Fst/Skmer/jc-24.02-dist-mat_4x_Clupea_wcfst.txt", sep = "\t", header = TRUE, stringsAsFactors = FALSE,)
str(data)
### The BEGINNING ~~~~~
##
# ~ Eval of Clustering performances for MDS with distance matrix from ANGSD (-doIBS) and Skmer distance | from Homère J. Alves Monteiro and Eduardo Charvel
# R 4.3.2 GUI 1.80 Big Sur ARM build (8281)
#### Clustering evaluation ####
##Skmer
pcoa_table_skmer <- read.csv("~/Desktop/GitHub/Gskimming/01_infofiles/DBScan/4x_jc-24.02-pcoa_table-mat_4x_Clupea.csv")
#  We'll focus on dist_1 and dist_2 for clustering
data <- pcoa_table[, c("dist_1", "dist_2")]
#### Clustering evaluation ####
##Skmer
pcoa_table_skmer <- read.csv("~/Desktop/GitHub/Gskimming/01_infofiles/DBScan/4x_jc-24.02-pcoa_table-mat_4x_Clupea.csv")
# Step 4: Determine the ground truth based on unique populations
ground_truth <- as.factor(pcoa_table_skmer$population)
# Step 5: Calculate the Adjusted Rand Index (ARI)
# Note: You need to convert clustering labels to a factor for ARI calculation
cluster_labels <- factor(dbscan_result$cluster)
ari_result <- adjustedRandIndex(cluster_labels, ground_truth)
### The BEGINNING ~~~~~
##
# ~ Eval of Clustering performances for MDS with distance matrix from ANGSD (-doIBS) and Skmer distance | from Homère J. Alves Monteiro and Eduardo Charvel
# R 4.3.2 GUI 1.80 Big Sur ARM build (8281)
library(mclust)
#### Clustering evaluation ####
##Skmer
pcoa_table_skmer <- read.csv("~/Desktop/GitHub/Gskimming/01_infofiles/DBScan/4x_jc-24.02-pcoa_table-mat_4x_Clupea.csv")
#  We'll focus on dist_1 and dist_2 for clustering
data <- pcoa_table[, c("dist_1", "dist_2")]
### The BEGINNING ~~~~~
##
# ~ Eval of Clustering performances for MDS with distance matrix from ANGSD (-doIBS) and Skmer distance | from Homère J. Alves Monteiro and Eduardo Charvel
# R 4.3.2 GUI 1.80 Big Sur ARM build (8281)
library(mclust)
#### Clustering evaluation ####
##Skmer
pcoa_table_skmer <- read.csv("~/Desktop/GitHub/Gskimming/01_infofiles/DBScan/4x_jc-24.02-pcoa_table-mat_4x_Clupea.csv")
#  We'll focus on dist_1 and dist_2 for clustering
data <- pcoa_table_skmer[, c("dist_1", "dist_2")]
ggplot(data, aes(x = dist_1, y = dist_2)) + geom_point()
dbscan::kNNdistplot(data, k =  2)
# Step 3: Apply the DBSCAN clustering algorithm
# adjust 'eps' and 'minPts'
dbscan_result <- dbscan(data, eps = 0.5, minPts = 2)
### The BEGINNING ~~~~~
##
# ~ Eval of Clustering performances for MDS with distance matrix from ANGSD (-doIBS) and Skmer distance | from Homère J. Alves Monteiro and Eduardo Charvel
# R 4.3.2 GUI 1.80 Big Sur ARM build (8281)
library(mclust)
library(dbscan)
#### Clustering evaluation ####
##Skmer
pcoa_table_skmer <- read.csv("~/Desktop/GitHub/Gskimming/01_infofiles/DBScan/4x_jc-24.02-pcoa_table-mat_4x_Clupea.csv")
#  We'll focus on dist_1 and dist_2 for clustering
data <- pcoa_table_skmer[, c("dist_1", "dist_2")]
ggplot(data, aes(x = dist_1, y = dist_2)) + geom_point()
dbscan::kNNdistplot(data, k =  2)
# Step 3: Apply the DBSCAN clustering algorithm
# adjust 'eps' and 'minPts'
dbscan_result <- dbscan(data, eps = 0.5, minPts = 2)
# Step 4: Determine the ground truth based on unique populations
ground_truth <- as.factor(pcoa_table_skmer$population)
# Step 5: Calculate the Adjusted Rand Index (ARI)
# Note: You need to convert clustering labels to a factor for ARI calculation
cluster_labels <- factor(dbscan_result$cluster)
ari_result <- adjustedRandIndex(cluster_labels, ground_truth)
# Print the ARI result
print(ari_result)
### The BEGINNING ~~~~~
##
# ~ Plot a PCoa/MDS with jc distance matrix from skmer -distance | from Homère J. Alves Monteiro and Eduardo Charvel
# ~ also Plot a PCoa/MDS with .ibs matrix from angsd -doIBS | from Homère J. Alves Monteiro and Eduardo Charvel
# R 4.3.2 GUI 1.80 Big Sur ARM build (8281)
### Clearing environment and setting working directory
rm(list = ls(all = TRUE))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
### Loading necessary packages
library(tidyverse)
library(dplyr)
library(ape)
library(cowplot)
library(knitr)
library(scales)
library(miscTools)
if (!requireNamespace("dbscan", quietly = TRUE)) install.packages("dbscan")
if (!requireNamespace("mclust", quietly = TRUE)) install.packages("mclust")
library(dbscan)
library(mclust)
### Sourcing required functions
source("individual_mdsGskim_functions_hjam.R")
### Reading and processing distance matrix
dist_jc <- read_tsv("~/Desktop/GitHub/Gskimming/00_data/Angsd/Clupea/RawCov/MDS/screenfeb24_Atmore_modern_SNP_Inv_free_regions_minInd0.25.ibsMat", col_names = FALSE) %>%
dplyr::select(1:nrow(.)) %>%
as.matrix()
pairwise_distances <- dist_jc[-1, -1]
ibs_mat <- as.data.frame(as.matrix(pairwise_distances))
ibs_mat[is.na(ibs_mat) | ibs_mat == "nan"] <- 0
ibs_mat[is.na(ibs_mat) | ibs_mat == "-nan"] <- 0
str(ibs_mat)
### Creating annotation file
sample_ids <- dist_jc[-1, 1]
cleaned_ids <- gsub("unclassified-kra_", "", sample_ids)
cleaned_ids <- gsub("_", "", cleaned_ids)
species_names <- rep("Clupea", length(sample_ids))
annotation_df <- data.frame(sample_id = sample_ids, cleaned_id = cleaned_ids, species = species_names)
### Link the master list to retrieve supplementary info
master_list<- read_csv("~/Desktop/GitHub/Gskimming/Metadata/ClupeaAtmore/Master_list_ClupeaAtmore.csv")
annot_df_final <- merge(annotation_df, master_list, by.x = "cleaned_id", by.y = "run_accession", all.x = TRUE)
### identify run_accession that are  not present in annot_df_final
missing_ind <- master_list %>%
filter(!run_accession %in% annot_df_final$cleaned_id)
for (accession in missing_ind$run_accession) {
cat(accession, "\n")
}
# Renaming the columns
annot_modern<- merge(annotation_df, annot_df_final, by = "cleaned_id")
#write.csv(annot_modern, "../../Gskimming/01_infofiles/ClupeaAtmore/ClupeaModern_annot.csv", row.names = FALSE)
fst_annot <- annot_modern %>% dplyr::select(sample_id.x, population)
colnames(fst_annot) <- c("genome", "family")
fst_annot$genome
### Performing PCoA with initial annotation
mds_plot <- PCoA(ibs_mat, annot_df_final$cleaned_id, annot_df_final$population,40, 1, 2, show.ellipse = FALSE, show.label = TRUE)
mds_plot
View(pcoa_table)
View(annot_df_final)
View(annot_modern)
View(annotation_df)
### Link the master list to retrieve supplementary info
master_list<- read_csv("~/Desktop/GitHub/Gskimming/Metadata/ClupeaAtmore/Master_list_ClupeaAtmore.csv")
### The BEGINNING ~~~~~
##
# ~ Plot a PCoa/MDS with jc distance matrix from skmer -distance | from Homère J. Alves Monteiro and Eduardo Charvel
# ~ also Plot a PCoa/MDS with .ibs matrix from angsd -doIBS | from Homère J. Alves Monteiro and Eduardo Charvel
# R 4.3.2 GUI 1.80 Big Sur ARM build (8281)
### Clearing environment and setting working directory
rm(list = ls(all = TRUE))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
### Loading necessary packages
library(tidyverse)
library(dplyr)
library(ape)
library(cowplot)
library(knitr)
library(scales)
library(miscTools)
if (!requireNamespace("dbscan", quietly = TRUE)) install.packages("dbscan")
if (!requireNamespace("mclust", quietly = TRUE)) install.packages("mclust")
library(dbscan)
library(mclust)
### Sourcing required functions
source("individual_mdsGskim_functions_hjam.R")
### Reading and processing distance matrix
dist_jc <- read_tsv("~/Desktop/GitHub/Gskimming/00_data/Angsd/Clupea/RawCov/MDS/screenfeb24_Atmore_modern_SNP_Inv_free_regions_minInd0.25.ibsMat", col_names = FALSE) %>%
dplyr::select(1:nrow(.)) %>%
as.matrix()
pairwise_distances <- dist_jc[-1, -1]
ibs_mat <- as.data.frame(as.matrix(pairwise_distances))
ibs_mat[is.na(ibs_mat) | ibs_mat == "nan"] <- 0
ibs_mat[is.na(ibs_mat) | ibs_mat == "-nan"] <- 0
str(ibs_mat)
### Creating annotation file
sample_ids <- dist_jc[-1, 1]
cleaned_ids <- gsub("unclassified-kra_", "", sample_ids)
cleaned_ids <- gsub("_", "", cleaned_ids)
species_names <- rep("Clupea", length(sample_ids))
### If you already have an tailored annotation file
#annot_ed <- read_tsv(file = "../../Skmer-2/with_fam_nas/geno_fam_annotation.tsv" )
annotation_df <- data.frame(sample_id = sample_ids, cleaned_id = cleaned_ids, species = species_names)
#write.csv(annotation_df, "../../Skmer-2/data/ClupeaAtmore3feb/03.02-dist-mat_annot.csv", row.names = FALSE)
### Link the master list to retrieve supplementary info
master_list<- read_csv("~/Desktop/GitHub/Gskimming/Metadata/ClupeaAtmore/Master_list_ClupeaAtmore.csv")
annot_df_final <- merge(annotation_df, master_list, by.x = "cleaned_id", by.y = "run_accession", all.x = TRUE)
View(annot_df_final)
View(annotation_df)
View(annot_df_final)
master_list
sample_ids
ibs_mat
View(ibs_mat)
### Reading and processing distance matrix
dist_jc <- read_tsv("~/Desktop/GitHub/Gskimming/00_data/Angsd/Clupea/RawCov/MDS/screenfeb24_Atmore_modern_SNP_Inv_free_regions_minInd0.25.ibsMat", col_names = FALSE) %>%
dplyr::select(1:nrow(.)) %>%
as.matrix()
ibs_mat <- as.data.frame(as.matrix(pairwise_distances))
### The BEGINNING ~~~~~
##
# ~ Plot a PCoa/MDS with jc distance matrix from skmer -distance | from Homère J. Alves Monteiro and Eduardo Charvel
# ~ also Plot a PCoa/MDS with .ibs matrix from angsd -doIBS | from Homère J. Alves Monteiro and Eduardo Charvel
# R 4.3.2 GUI 1.80 Big Sur ARM build (8281)
### Clearing environment and setting working directory
rm(list = ls(all = TRUE))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
### Loading necessary packages
library(tidyverse)
library(dplyr)
library(ape)
library(cowplot)
library(knitr)
library(scales)
library(miscTools)
if (!requireNamespace("dbscan", quietly = TRUE)) install.packages("dbscan")
if (!requireNamespace("mclust", quietly = TRUE)) install.packages("mclust")
library(dbscan)
library(mclust)
### Sourcing required functions
source("individual_mdsGskim_functions_hjam.R")
### Reading and processing distance matrix
dist_jc <- read_tsv("~/Desktop/GitHub/Gskimming/00_data/Angsd/Clupea/RawCov/MDS/screenfeb24_Atmore_modern_SNP_Inv_free_regions_minInd0.25.ibsMat", col_names = FALSE) %>%
dplyr::select(1:nrow(.)) %>%
as.matrix()
### The BEGINNING ~~~~~
##
# ~ Plot a PCoa/MDS with jc distance matrix from skmer -distance | from Homère J. Alves Monteiro and Eduardo Charvel
# ~ also Plot a PCoa/MDS with .ibs matrix from angsd -doIBS | from Homère J. Alves Monteiro and Eduardo Charvel
# R 4.3.2 GUI 1.80 Big Sur ARM build (8281)
### Clearing environment and setting working directory
rm(list = ls(all = TRUE))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
### Loading necessary packages
library(tidyverse)
library(dplyr)
library(ape)
library(cowplot)
library(knitr)
library(scales)
library(miscTools)
if (!requireNamespace("dbscan", quietly = TRUE)) install.packages("dbscan")
if (!requireNamespace("mclust", quietly = TRUE)) install.packages("mclust")
library(dbscan)
library(mclust)
### Sourcing required functions
source("individual_mdsGskim_functions_hjam.R")
### Reading and processing distance matrix
dist_jc <- read_tsv("../../Skmer-2/data/Clupea_4x_24feb24/jc-24.02-dist-mat_4x_Clupea.txt", col_names = FALSE) %>%
dplyr::select(1:nrow(.)) %>%
as.matrix()
### The BEGINNING ~~~~~
##
# ~ Plot a PCoa/MDS with jc distance matrix from skmer -distance | from Homère J. Alves Monteiro and Eduardo Charvel
# ~ also Plot a PCoa/MDS with .ibs matrix from angsd -doIBS | from Homère J. Alves Monteiro and Eduardo Charvel
# R 4.3.2 GUI 1.80 Big Sur ARM build (8281)
### Clearing environment and setting working directory
rm(list = ls(all = TRUE))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
### Sourcing required functions
source("individual_mdsGskim_functions_hjam.R")
### Reading and processing distance matrix
dist_jc <- read_tsv("~/Desktop/GitHub/Gskimming/00_data/Angsd/Clupea/RawCov/MDS/screenfeb24_Atmore_modern_SNP_Inv_free_regions_minInd0.25.ibsMat", col_names = FALSE) %>%
dplyr::select(1:nrow(.)) %>%
as.matrix()
annot <- read.table("~/Desktop/GitHub/Gskimming/00_data/Angsd/Clupea/RawCov/MDS/feb24_Atmore_modern_SNP_minInd0.25.annot", sep = "\t", header = FALSE, stringsAsFactors = FALSE)
View(annot)
View(dist_jc)
View(annot)
annot <- read.table("~/Desktop/GitHub/Gskimming/00_data/Angsd/Clupea/RawCov/MDS/feb24_Atmore_modern_SNP_minInd0.25.annot.csv", sep = "\t", header = FALSE, stringsAsFactors = FALSE)
View(annot)
annot <- read.table("../../Gskimming/01_infofiles/ClupeaAtmore/ClupeaModern_annot.csv", sep = "\t", header = FALSE, stringsAsFactors = FALSE)
View(annot)
annot <- read_csv("../../Gskimming/01_infofiles/ClupeaAtmore/ClupeaModern_annot.csv", sep = "\t", header = FALSE, stringsAsFactors = FALSE)
annot <- read_csv("../../Gskimming/01_infofiles/ClupeaAtmore/ClupeaModern_annot.csv")
View(annot)
### The BEGINNING ~~~~~
##
# ~ Plot a PCoa/MDS with jc distance matrix from skmer -distance | from Homère J. Alves Monteiro and Eduardo Charvel
# ~ also Plot a PCoa/MDS with .ibs matrix from angsd -doIBS | from Homère J. Alves Monteiro and Eduardo Charvel
# R 4.3.2 GUI 1.80 Big Sur ARM build (8281)
### Clearing environment and setting working directory
rm(list = ls(all = TRUE))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
### Loading necessary packages
library(tidyverse)
library(dplyr)
library(ape)
library(cowplot)
library(knitr)
library(scales)
library(miscTools)
if (!requireNamespace("dbscan", quietly = TRUE)) install.packages("dbscan")
if (!requireNamespace("mclust", quietly = TRUE)) install.packages("mclust")
library(dbscan)
library(mclust)
### Sourcing required functions
source("individual_mdsGskim_functions_hjam.R")
### Reading and processing distance matrix
cov_mat <- read_tsv("~/Desktop/GitHub/Gskimming/00_data/Angsd/Clupea/RawCov/MDS/screenfeb24_Atmore_modern_SNP_Inv_free_regions_minInd0.25.ibsMat", col_names = FALSE) %>%
dplyr::select(1:nrow(.)) %>%
as.matrix()
annot <- read_csv("../../Gskimming/01_infofiles/ClupeaAtmore/ClupeaModern_annot.csv")
### The BEGINNING ~~~~~
##
# ~ Plot a PCoa/MDS with jc distance matrix from skmer -distance | from Homère J. Alves Monteiro and Eduardo Charvel
# ~ also Plot a PCoa/MDS with .ibs matrix from angsd -doIBS | from Homère J. Alves Monteiro and Eduardo Charvel
# R 4.3.2 GUI 1.80 Big Sur ARM build (8281)
### Clearing environment and setting working directory
rm(list = ls(all = TRUE))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
### Loading necessary packages
library(tidyverse)
library(dplyr)
library(ape)
library(cowplot)
library(knitr)
library(scales)
library(miscTools)
if (!requireNamespace("dbscan", quietly = TRUE)) install.packages("dbscan")
if (!requireNamespace("mclust", quietly = TRUE)) install.packages("mclust")
library(dbscan)
library(mclust)
### Sourcing required functions
source("individual_mdsGskim_functions_hjam.R")
### Reading and processing distance matrix
ibs_mat <- read_tsv("~/Desktop/GitHub/Gskimming/00_data/Angsd/Clupea/RawCov/MDS/screenfeb24_Atmore_modern_SNP_Inv_free_regions_minInd0.25.ibsMat", col_names = FALSE) %>%
dplyr::select(1:nrow(.)) %>%
as.matrix()
annot <- read_csv("../../Gskimming/01_infofiles/ClupeaAtmore/ClupeaModern_annot.csv")
View(annot)
### Performing PCoA with initial annotation
mds_plot <- PCoA(ibs_mat, annot$cleaned_id, annot$population,40, 1, 2, show.ellipse = FALSE, show.label = TRUE)
write.csv(pcoa_table, "~/Desktop/GitHub/Gskimming/00_data/Angsd/Clupea/RawCov/MDS/Angsd_rawcov_AtmoreClupea_pcoa_table-mat_Mar24.csv", row.names = FALSE)
## The BEGINNING ~~~~~
##
# ~ Eval of Clustering performances for MDS with distance matrix from ANGSD (-doIBS) and Skmer distance | from Homère J. Alves Monteiro and Eduardo Charvel
### Clearing environment and setting working directory
rm(list = ls(all = TRUE))
# R 4.3.2 GUI 1.80 Big Sur ARM build (8281)
library(mclust)
library(dbscan)
#### Clustering evaluation ####
##Skmer
pcoa_table_skmer <- read.csv("~/Desktop/GitHub/Gskimming/00_data/Angsd/Clupea/RawCov/MDS/Angsd_rawcov_AtmoreClupea_pcoa_table-mat_Mar24.csv")
#  We'll focus on dist_1 and dist_2 for clustering
#  We'll focus on dist_1 and dist_2 for clustering
data <- pcoa_table_skmer[, c("dist_1", "dist_2")]
ggplot(data, aes(x = dist_1, y = dist_2)) + geom_point()
dbscan::kNNdistplot(data, k =  2)
# Step 3: Apply the DBSCAN clustering algorithm
# adjust 'eps' and 'minPts'
dbscan_result <- dbscan(data, eps = 0.5, minPts = 2)
# Step 4: Determine the ground truth based on unique populations
ground_truth <- as.factor(pcoa_table_skmer$population)
# Step 5: Calculate the Adjusted Rand Index (ARI)
# Note: You need to convert clustering labels to a factor for ARI calculation
cluster_labels <- factor(dbscan_result$cluster)
ari_result <- adjustedRandIndex(cluster_labels, ground_truth)
# Print the ARI result
print(ari_result)
